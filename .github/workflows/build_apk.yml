name: Build, Sign and Release APK

on:
  push:
    branches: [ 'release*' ]  # 仅对 release 分支触发

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许上传产物
      releases: write  # 关键：添加 Release 创建权限 [6](@ref)

    steps:
    # 1. 拉取代码
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. 设置 Java 环境
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # 3. 安装 Android Build-Tools
    - name: Install Android Build-Tools
      uses: android-actions/setup-android@v2
      with:
        build-tools: 34.0.0  # 确保 zipalign 可用 [1](@ref)

    # 4. 构建 APK
    - name: Build Release APK
      uses: gradle/gradle-build-action@v2
      with:
        arguments: assembleRelease

    # 5. 验证密钥别名
    - name: Verify Keystore Alias
      run: |
        echo "${{ secrets.SIGNING_KEY }}" | base64 -d > temp.jks
        keytool -list -v -keystore temp.jks -storepass "${{ secrets.KEY_STORE_PASSWORD }}"

    # 6. 签名 APK
    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"  # 显式指定版本

    # 7. 重命名 APK（添加唯一后缀避免冲突）
    - name: Rename APK
      run: |
        mv "${{ steps.sign_app.outputs.signedReleaseFile }}" \
        myapp_${{ github.run_id }}.apk  # 使用 run_id 确保唯一性

    # 8. 清理临时密钥
    - name: Cleanup Keystore
      run: rm -f temp.jks

    # 9. 创建 GitHub Release（带冲突检测）
    - name: Check if release tag exists
      id: check_release
      run: |
        if git ls-remote --tags origin | grep -q "refs/tags/v1.0-${{ github.run_id }}"; then
          echo "release_exists=true" >> $GITHUB_OUTPUT
        else
          echo "release_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      if: steps.check_release.outputs.release_exists == 'false'
      uses: softprops/action-gh-release@v1  # 更稳定的 Release 工具 [6](@ref)
      with:
        tag_name: v1.0-${{ github.run_id }}  # 唯一标签
        name: Release v1.0 (Build ${{ github.run_id }})
        body: "Automated release from GitHub Actions"
        files: myapp_*.apk
        token: ${{ secrets.GITHUB_TOKEN }}
