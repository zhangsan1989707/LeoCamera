name: Build APK Only

on:
  push:
    branches: [ 'release*' ]  # 仅 release 分支触发
  workflow_dispatch:  # 支持手动触发

permissions:
  contents: write  # 允许上传构建产物

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 设置 JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. 安装 Android Build-Tools（修复环境问题）
      - name: Install Android Build-Tools
        uses: android-actions/setup-android@v2
        with:
          build-tools: 34.0.0  # 兼容 Android 13+

      # 4. 构建 APK（可选调试版）
      - name: Build APK
        uses: gradle/gradle-build-action@v2
        with:
          # 若需调试版替换为：assembleDebug
          arguments: assembleRelease  

      # 5. 签名 APK（可选步骤）
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}  # Base64 编码的密钥
          alias: ${{ secrets.ALIAS }}                   # 密钥别名
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      # 6. 重命名 APK（添加唯一标识）
      - name: Rename APK
        run: |
          # 使用流水线ID确保文件名唯一
          mv "${{ steps.sign_app.outputs.signedReleaseFile }}" \
          myapp_${{ github.run_id }}.apk

      # 7. 上传 APK 供下载
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk-build
          path: myapp_*.apk
          retention-days: 7  # 自动清理旧文件
